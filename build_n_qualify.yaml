---
- name: Check subscription-manager identity for 'SAP' or 'SAPHANA'
  hosts: all
  gather_facts: yes
  vars_prompt:
    - name: CHG_NUMBER
      prompt: "Enter CHG NUMBER: "
      private: no

  tasks:
    - name: check Subscription
      command: "subscription-manager identity"
      register: subscription_identity
      changed_when: false
      
    - name: Debug subscription_identity and register the variables
      debug:
        var: subscription_identity

    - name: Parse subscription-manager output
      set_fact:
        is_app: "{{ 'SAP_' in subscription_identity.stdout   }}"
        is_hana: "{{ 'HANA' in subscription_identity.stdout  }}"

    - name: Do not run the playbook if 'SAP' or 'SAPHANA' Subscription is not found
      fail:
        msg: "The subscription is not for 'SAP_App' or 'SAPHANA'. Aborting playbook execution."
      when: not (is_app or is_hana)

    - name: If subscription is one of APP or HANA Solutions
      block:
        - name: Check for App subscription
          debug:
            msg: host is a Netweaver/Applications server
          when: is_app

        - name: check for Hana Solution
          debug:
            msg: host is a HANA/Solutions server
          when: is_hana

    - name: Check if backup file exists for grub
      stat:
        path: /etc/default/grub.preBnQ{{ CHG_NUMBER }}
      register: backup_file
 
    - name: Backup files with extension preB&Q
      copy: src={{ item.src }} dest={{ item.dest }} remote_src=yes force=no
      with_items:
         - { src: '/etc/fstab', dest: '/etc/fstab.preBnQ{{ CHG_NUMBER }}' }
         - { src: '/etc/security/limits.conf', dest: '/etc/security/limits.conf.preBnQ{{ CHG_NUMBER }}' }
         - { src: '/etc/services', dest: '/etc/services.preBnQ{{ CHG_NUMBER }}' }
         - { src: '/etc/hosts', dest: '/etc/hosts.preBnQ{{ CHG_NUMBER }}' }
         - { src: '/etc/default/grub', dest: '/etc/default/grub.preBnQ{{ CHG_NUMBER }}' }
         - { src: '/etc/selinux/config', dest: '/etc/selinux/config.preBnQ{{ CHG_NUMBER }}' }
      when: not backup_file.stat.exists

    - name: Disable SELinux in configuration file
      lineinfile:
        path: /etc/selinux/config
        regexp: '^(SELINUX=enforcing|SELINUX=permissive)'
        line: 'SELINUX=disabled'

    - name: Read the contents of /etc/default/grub
      shell: cat /etc/default/grub
      register: grub_file

    - name: Define additional grub parameters for App servers
      set_fact: 
        additional_params: "processor.max_cstate=1 intel_idle.max_cstate=1 selinux=0 clocksource=tsc"
      when: is_app

    - name: Define additional grub parameters for Hana servers
      set_fact: 
        additional_params: "processor.max_cstate=1 intel_idle.max_cstate=1 selinux=0 clocksource=tsc transparent_hugepage=never tsx=on"
      when: is_hana 

    - name: Remove double quotes and GRUB_CMDLINE_LINUX= prefix from existing line
      set_fact: 
        cleaned_line: "{{ grub_file.stdout_lines | select('match', '^GRUB_CMDLINE_LINUX=.*$') | first | regex_replace('GRUB_CMDLINE_LINUX=', '') | regex_replace('\"', '') }}"

    - name: Append additional parameters to GRUB_CMDLINE_LINUX line
      lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX=.*$'
        line: 'GRUB_CMDLINE_LINUX="{{ cleaned_line }} {{ additional_params }}"'
        state: present
      when: not backup_file.stat.exists
      tags:
        - exclude_grub_update

      notify:
        - update-grub
        - dracut      

    - name: Adding sapsys in centrify group ignore, if it exists
      shell: grep -c sapsys /etc/group && ! grep -c sapsys /etc/centrifydc/group.ignore && echo sapsys >> /etc/centrifydc/group.ignore
      ignore_errors: yes

    - name: Adding local user in centrify user ignore
      shell: "awk -F: '{print $1}' /etc/passwd > /etc/centrifydc/user.ignore && sleep 120 && adreload"

    - name: Install Packages
      yum:
        name: "{{ item }}"
      with_items:
        - lshw
        - perf
        - telnet
        - uuidd
        - iperf3
        - tree
        - jq
        - dos2unix
        - yum-utils
      ignore_errors: true

    
    - name:  Set X11 forwarding to yes
      replace:
         path: /etc/ssh/sshd_config
         regexp:  '(^X11Forwarding)(.*)$'
         replace: X11Forwarding yes

    - name: Suppress spam on RHEL8 servers
      copy:
         src: files/ignore-messages.conf
         dest: /etc/rsyslog.d/ignore-messages.conf
      notify:
        - restart-rsyslogd

    - name: Verify /usr/local/bin ownership
      file:
         path: /usr/local/bin
         state: directory
         owner: root
         group: root

    - name: Copy new bscript
      copy:
         src: /net/gutstools/guts_dev/distr/scripts/bscript_ng
         dest: /etc/bscript
         owner: root
         group: sys
         mode: '0700'
         backup: yes

    - name: Set selinux labels
      shell: touch /.autorelabel

    - name: add root mail to be under logrotate control
      copy:
         src: files/mail
         dest: /etc/logrotate.d/
         owner: root
         group: root

    - name: To set hostname as short one
      shell: echo "{{ ansible_hostname }}" > /etc/hostname


    - name: Create file zlilly.conf if it doesn't exist
      file:
        path: /etc/sysctl.d/zLilly.conf
        state: touch

    - name: Update file /etc/sysctl.d/zLilly.conf - # Lilly SAP settings for RHEL8/RHEL9
      blockinfile:
         path: /etc/sysctl.d/zLilly.conf 
         backup: yes
         block: |
          net.ipv4.tcp_syn_retries = 8
          kernel.shmmni = 32768
          net.ipv4.tcp_rmem = 4096 16384 6291456
          net.ipv4.tcp_wmem = 4096 16384 6291456
          net.core.rmem_max = 6291456
          net.core.wmem_max = 6291456
          kernel.sem = 32000 1024000000 500 3276



##################  Handlers  ###################
  handlers:
    - name: update-grub
      command: "grub2-mkconfig -o /boot/grub2/grub.cfg"
    - name: dracut
      command: dracut -f 
    - name: restart-rsyslogd
      systemd: 
       state: restarted
       name: rsyslog
